
启动        systemctl start docker
守护进程重启   sudo systemctl daemon-reload
重启docker服务   systemctl restart  docker
重启docker服务  sudo service docker restart
关闭docker   service docker stop   
关闭docker  systemctl stop docker

docker --version 版本号
docker info
docker run [image] [command] 启动容器
docker logs [id]  查看容器日志
docker ps  显示所有容器
docker stop [id] 停止容器
##获取镜像
docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]

##登录
docker login

##运行
docker run -it --rm centos:7 bash

##查看系统版本
vi /etc/os-release

##列出所有顶级镜像
docker image ls

    ##列出包括中间层镜像的所有镜像
	docker image ls -a
	
	##列出所有镜像的id
	docker image ls -q
	
	##列出所有镜像id和仓库名
	docker image ls --format "{{.ID}}: {{.Repository}}"

	##查看镜像、容器、数据卷所占空间
	docker system df

	##显示虚悬镜像
	docker image ls -f dangling=true

	##删除所有虚悬镜像
	docker image prune
	
##删除本地镜像
		
	##删除镜像（可以用短id、长id删除）
	docker image rm 
	
	

##启动容器(1.基于镜像新建一个容器并启动2.将终止状态的容器重新启动)

	##新建并启动
	docker run image
	
	##启动已终止的容器
	docker ps -as
	docker start [containerId]
	
	##查看所有容器
	docker container ls -a

##docker守护态运行
	docker run -d image
	
	
##docker终止容器
	docker container stop [containerid]
	
##docker进入容器
	docker attach [containerid]   (如果从这个 stdin 中 exit，会导致容器的停止。)
	docker exec -it [containerid]  bash     （如果从这个 stdin 中 exit，不会导致容器的停止）
	
	
##docker导入和导出
	##导出容器
	docker export [containerid] > [imageName].tar
	
	##导入容器
	docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]
	
		例如：
			docker import http://example.com/exampleimage.tgz example/imagerepo
			
			cat exampleimage.tgz | docker import - exampleimagelocal:new
			
			docker import  my_ubuntu_v3.tar runoob/ubuntu:v4 
			
##docker删除容器
	docker container rm [containerId]  删除一个处于终止状态的容器
	
	docker container prune 清理所有处于终止状态的容器
	

##docker仓库
	
	##官方仓库：docker hub:
			hub.docker.com
	
	##注册
		
			你可以在 https://cloud.docker.com 免费注册一个 Docker 账号。

	##登录
			
		docker login
		docker logout
	
	
	##搜索镜像
		docker search  [keyword]
	
	
	##拉取镜像
		docker pull [imageName]
		
		
	##推送镜像到docker hub仓库
		1.docker login 登录
		
		2.docker  tag [imageId] [userId]/[name]:[version]
				例如：	docker tag 9f38484d220f nonameforyi/centos:v1
		
		3.docker push [userId]/[name]:[version]
				例如：docker push nonameforyi/centos:v1
	
		4.拉取这个镜像
			docker pull nonameforyi/centos:v1
			
	##自动创建（根据github上的文件状态，自动构建新的镜像并推送到docker hub中）		
		步骤：
			创建并登录 Docker Hub，以及目标网站；
			在目标网站中连接帐户到 Docker Hub；
			在 Docker Hub 中 配置一个自动创建；
			选取一个目标网站中的项目（需要含 Dockerfile）和分支；
			指定 Dockerfile 的位置，并提交创建。
				
				
				
##私有仓库


#安装docker compose
	
	1.执行脚本安装
		 curl -L "https://github.com/docker/compose/releases/download/1.11.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
	2.修改docker-compose命令的权限
		chmod +x /usr/local/bin/docker-compose

	3.验证是否安装成功
		docker-compose --version