&0x1   代表只保留第一位的值，即最右边的一位
&0xFF  作用：保持二进制补码的一致性

【>>】
	>> ：向右位移，最高位补原值（原值是1则补1，是0则补0）
【>>>】
	>>>：向右位移，最高位补0（始终为正）
【<<】
	<< ：向左位移，不分正负数，原高位舍弃，低位补0
【& 与】
		两个数都为1则返回1，否则为0
例：
	01010001 &
	01101010
 结果：
	01000000


与运算的用途：

1）清零

如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为零的数值相与，结果为零。

2）取一个数的指定位

比如取数 X=1010 1110 的低4位，只需要另找一个数Y，令Y的低4位为1，其余位为0，即Y=0000 1111，然后将X与Y进行按位与运算（X&Y=0000 1110）即可得到X的指定位。

3）判断奇偶

只要根据最未位是0还是1来决定，为0就是偶数，为1就是奇数。因此可以用if ((a & 1) == 0)代替if (a % 2 == 0)来判断a是不是偶数。


【| 或】
		两个数只要有一个为1则为1，否则就为0
例：
	01010001 |
	01101010
  结果：	
	01111011


或运算的用途：

1）常用来对一个数据的某些位设置为1

比如将数 X=1010 1110 的低4位设置为1，只需要另找一个数Y，令Y的低4位为1，其余位为0，即Y=0000 1111，然后将X与Y进行按位或运算（X|Y=1010 1111）即可得到。
	
【~ 非】
		如果位为0，结果是1，如果位为1，结果是0
	~01010001
  结果：	
	 10101110

【^ 异或】
		两个数转为二进制，然后从高位开始比较，如果相同则为0，不相同则为1
	01010001 ^
	01101010
  结果：	
	00111011